// Code generated by protoc-gen-go. DO NOT EDIT.
// source: APIDispatch.proto

package dispatch

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	PKey                 string   `protobuf:"bytes,1,opt,name=pKey,proto3" json:"pKey,omitempty"`
	DName                string   `protobuf:"bytes,2,opt,name=dName,proto3" json:"dName,omitempty"`
	Mid                  string   `protobuf:"bytes,3,opt,name=mid,proto3" json:"mid,omitempty"`
	Action               string   `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
	Timestamp            int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Data                 []byte   `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_APIDispatch_3bfcb246b1012094, []int{0}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetPKey() string {
	if m != nil {
		return m.PKey
	}
	return ""
}

func (m *Request) GetDName() string {
	if m != nil {
		return m.DName
	}
	return ""
}

func (m *Request) GetMid() string {
	if m != nil {
		return m.Mid
	}
	return ""
}

func (m *Request) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *Request) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Request) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Response struct {
	Resp                 []byte   `protobuf:"bytes,1,opt,name=resp,proto3" json:"resp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_APIDispatch_3bfcb246b1012094, []int{1}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetResp() []byte {
	if m != nil {
		return m.Resp
	}
	return nil
}

func init() {
	proto.RegisterType((*Request)(nil), "dispatch.Request")
	proto.RegisterType((*Response)(nil), "dispatch.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// APIDispatchClient is the client API for APIDispatch service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIDispatchClient interface {
	Process(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	AsyncProcess(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type aPIDispatchClient struct {
	cc *grpc.ClientConn
}

func NewAPIDispatchClient(cc *grpc.ClientConn) APIDispatchClient {
	return &aPIDispatchClient{cc}
}

func (c *aPIDispatchClient) Process(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/dispatch.APIDispatch/process", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIDispatchClient) AsyncProcess(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/dispatch.APIDispatch/asyncProcess", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// APIDispatchServer is the server API for APIDispatch service.
type APIDispatchServer interface {
	Process(context.Context, *Request) (*Response, error)
	AsyncProcess(context.Context, *Request) (*Response, error)
}

func RegisterAPIDispatchServer(s *grpc.Server, srv APIDispatchServer) {
	s.RegisterService(&_APIDispatch_serviceDesc, srv)
}

func _APIDispatch_Process_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIDispatchServer).Process(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dispatch.APIDispatch/Process",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIDispatchServer).Process(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIDispatch_AsyncProcess_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIDispatchServer).AsyncProcess(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dispatch.APIDispatch/AsyncProcess",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIDispatchServer).AsyncProcess(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _APIDispatch_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dispatch.APIDispatch",
	HandlerType: (*APIDispatchServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "process",
			Handler:    _APIDispatch_Process_Handler,
		},
		{
			MethodName: "asyncProcess",
			Handler:    _APIDispatch_AsyncProcess_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "APIDispatch.proto",
}

func init() { proto.RegisterFile("APIDispatch.proto", fileDescriptor_APIDispatch_3bfcb246b1012094) }

var fileDescriptor_APIDispatch_3bfcb246b1012094 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x31, 0x69, 0xd3, 0xf6, 0xc8, 0x40, 0x4f, 0x08, 0x59, 0x08, 0xa1, 0x28, 0x53, 0xa6,
	0x0c, 0x65, 0x60, 0x46, 0x62, 0x41, 0x48, 0xa8, 0xf2, 0x1b, 0x98, 0xf8, 0x24, 0x3c, 0x38, 0x36,
	0x39, 0x33, 0x94, 0x97, 0xe0, 0x95, 0x51, 0xae, 0x41, 0x74, 0x65, 0xfb, 0xfe, 0xcf, 0xb2, 0x7d,
	0xff, 0xc1, 0xf6, 0x71, 0xff, 0xfc, 0xe4, 0x39, 0xd9, 0xdc, 0xbf, 0x77, 0x69, 0x8c, 0x39, 0xe2,
	0xda, 0xcd, 0xb9, 0xf9, 0x56, 0xb0, 0x32, 0xf4, 0xf1, 0x49, 0x9c, 0x11, 0x61, 0x91, 0x5e, 0xe8,
	0xa0, 0x55, 0xad, 0xda, 0x8d, 0x11, 0xc6, 0x2b, 0x58, 0xba, 0x57, 0x1b, 0x48, 0x9f, 0x8b, 0x3c,
	0x06, 0xbc, 0x84, 0x22, 0x78, 0xa7, 0x0b, 0x71, 0x13, 0xe2, 0x35, 0x94, 0xb6, 0xcf, 0x3e, 0x0e,
	0x7a, 0x21, 0x72, 0x4e, 0x78, 0x0b, 0x9b, 0xec, 0x03, 0x71, 0xb6, 0x21, 0xe9, 0x65, 0xad, 0xda,
	0xc2, 0xfc, 0x89, 0xe9, 0x47, 0x67, 0xb3, 0xd5, 0x65, 0xad, 0xda, 0xca, 0x08, 0x37, 0x77, 0xb0,
	0x36, 0xc4, 0x29, 0x0e, 0x4c, 0xd3, 0xf9, 0x48, 0x9c, 0x64, 0xa2, 0xca, 0x08, 0xef, 0xbe, 0xe0,
	0xe2, 0xa4, 0x10, 0xee, 0x60, 0x95, 0xc6, 0xd8, 0x13, 0x33, 0x6e, 0xbb, 0xdf, 0x5a, 0xdd, 0x5c,
	0xe9, 0x06, 0x4f, 0xd5, 0xf1, 0xd1, 0xe6, 0x0c, 0x1f, 0xa0, 0xb2, 0x7c, 0x18, 0xfa, 0xfd, 0x3f,
	0x2f, 0xbe, 0x95, 0xb2, 0xbe, 0xfb, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf6, 0xe4, 0x51, 0x12,
	0x53, 0x01, 0x00, 0x00,
}
