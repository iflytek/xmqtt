// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Push.proto

package push

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Input                []byte   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_Push_64ff9ba2e07d35ba, []int{0}
}
func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (dst *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(dst, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetInput() []byte {
	if m != nil {
		return m.Input
	}
	return nil
}

type Reply struct {
	Ret                  int64    `protobuf:"varint,1,opt,name=ret,proto3" json:"ret"`
	Err                  string   `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_Push_64ff9ba2e07d35ba, []int{1}
}
func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (dst *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(dst, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetRet() int64 {
	if m != nil {
		return m.Ret
	}
	return 0
}

func (m *Reply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "push.Request")
	proto.RegisterType((*Reply)(nil), "push.Reply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DispatchPushClient is the client API for DispatchPush service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DispatchPushClient interface {
	Process(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error)
}

type dispatchPushClient struct {
	cc *grpc.ClientConn
}

func NewDispatchPushClient(cc *grpc.ClientConn) DispatchPushClient {
	return &dispatchPushClient{cc}
}

func (c *dispatchPushClient) Process(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/push.DispatchPush/Process", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DispatchPushServer is the server API for DispatchPush service.
type DispatchPushServer interface {
	Process(context.Context, *Request) (*Reply, error)
}

func RegisterDispatchPushServer(s *grpc.Server, srv DispatchPushServer) {
	s.RegisterService(&_DispatchPush_serviceDesc, srv)
}

func _DispatchPush_Process_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DispatchPushServer).Process(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.DispatchPush/Process",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DispatchPushServer).Process(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _DispatchPush_serviceDesc = grpc.ServiceDesc{
	ServiceName: "push.DispatchPush",
	HandlerType: (*DispatchPushServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Process",
			Handler:    _DispatchPush_Process_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "Push.proto",
}

func init() { proto.RegisterFile("Push.proto", fileDescriptor_Push_64ff9ba2e07d35ba) }

var fileDescriptor_Push_64ff9ba2e07d35ba = []byte{
	// 152 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x0a, 0x28, 0x2d, 0xce,
	0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x29, 0x28, 0x2d, 0xce, 0x50, 0x92, 0xe7, 0x62,
	0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe1, 0x62, 0xcd, 0xcc, 0x2b, 0x28, 0x2d,
	0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x09, 0x82, 0x70, 0x94, 0xb4, 0xb9, 0x58, 0x83, 0x52, 0x0b,
	0x72, 0x2a, 0x85, 0x04, 0xb8, 0x98, 0x8b, 0x52, 0x21, 0x92, 0xcc, 0x41, 0x20, 0x26, 0x48, 0x24,
	0xb5, 0xa8, 0x48, 0x82, 0x49, 0x81, 0x51, 0x83, 0x33, 0x08, 0xc4, 0x34, 0x32, 0xe7, 0xe2, 0x71,
	0xc9, 0x2c, 0x2e, 0x48, 0x2c, 0x49, 0xce, 0x00, 0xd9, 0x24, 0xa4, 0xce, 0xc5, 0x1e, 0x50, 0x94,
	0x9f, 0x9c, 0x5a, 0x5c, 0x2c, 0xc4, 0xab, 0x07, 0xb2, 0x4f, 0x0f, 0x6a, 0x99, 0x14, 0x37, 0x8c,
	0x5b, 0x90, 0x53, 0xa9, 0xc4, 0x90, 0xc4, 0x06, 0x76, 0x93, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff,
	0x1d, 0x5c, 0xb1, 0x11, 0xa1, 0x00, 0x00, 0x00,
}
